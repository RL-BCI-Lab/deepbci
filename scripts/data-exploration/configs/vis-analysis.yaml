defaults: &defaults
  _target_: deepbci.data_utils.data_loaders.load_data
  load_method: load_to_memory
  load_method_kwargs:
    subjects: eval(list(range(1, 9+1)))
    trials: eval(list(range(1, 10+1)))
    data_file: eeg.csv
    true_fs: false
    preload_epoch_indexes: 
      generate_sync_epochs:
        use_events: [1]

groups:
  _target_: deepbci.data_utils.Groups
  data_groups:
    dbci:
    - <<: *defaults
      data_loader: 
        _target_: deepbci.data_utils.data_loaders.OAOutLoader

    - <<: *defaults
      data_loader: 
        _target_: deepbci.data_utils.data_loaders.OAObsLoader

    - <<: *defaults
      data_loader: 
        _target_: deepbci.data_utils.data_loaders.BGSIntLoader

    - <<: *defaults
      data_loader: 
        _target_: deepbci.data_utils.data_loaders.BGSObsLoader
ica:
  groups:
    _target_: deepbci.data_utils.Groups
    data_groups:
      dbci:
      - _target_: deepbci.data_utils.data_loaders.load_data
        data_loader: 
          _target_: deepbci.data_utils.data_loaders.BGSIntLoader
        load_method: load_to_memory
        load_method_kwargs:
          subjects: eval(list(range(1, 9+1)))
          trials: eval(list(range(1, 10+1)))
          data_file: eeg.csv
          true_fs: false
          preload_epoch_indexes: 
            generate_sync_epochs:
              use_events: [1, 2]
      - _target_: deepbci.data_utils.data_loaders.load_data
        data_loader: 
          _target_: deepbci.data_utils.data_loaders.BGSObsLoader
        load_method: load_to_memory
        load_method_kwargs:
          subjects: eval(list(range(1, 9+1)))
          trials: eval(list(range(1, 10+1)))
          data_file: eeg.csv
          true_fs: false
          preload_epoch_indexes: 
            generate_sync_epochs:
              use_events: [1, 2]

  mutate:
    part1:
    - apply_func:
        select: null
        func:
          _partial_: True
          _target_: deepbci.data_utils.mutators.filter
          l_freq: 1
          h_freq: null
          method: 'fir'

    - compress:
        compress_level: subject

    part2:
    - apply_func:
        select: null
        func:
          _partial_: True
          _target_: deepbci.data_utils.mutators.filter
          l_freq: 1
          h_freq: null
          method: 'fir'

    - apply_func:
        select: null
        func:
          _partial_: True
          _target_: deepbci.data_utils.mutators.epoch
          tmin: -0.2
          tmax: 0.995
          preload: true
          picks: [eeg]
          verbose: WARNING
          baseline: null
          # reject: 
          #   eeg: eval(100*1e-6)
          
    - compress:
        compress_level: subject
        add_offset: True

mutate_drop:
# Apply high pass filter before rejecting
- apply_func:
    select: null
    func:
      _partial_: True
      _target_: deepbci.data_utils.mutators.filter
      l_freq: 0.1
      h_freq: null
      method: iir
      verbose: False
      iir_params:
        order: 4
        ftype: butter
        output: sos

- apply_func:
    select: null
    func:
      _partial_: True
      _target_: deepbci.data_utils.mutators.epoch
      tmin: -0.2
      tmax: 0.995
      preload: true
      picks: [eeg]
      verbose: WARNING
      baseline: null

- compress:
    compress_level: subject

- apply_func:
    select: [[dbci], [BGSObs, BGSInt]]
    func:
      _partial_: True
      _target_: deepbci.data_utils.mutators.reject_epochs
      reject: 
        eeg: eval(50*1e-6)
- apply_func:
    select: [[dbci], [OAObs, OAOut]]
    func:
      _partial_: True
      _target_: deepbci.data_utils.mutators.reject_epochs
      reject: 
        eeg: eval(100*1e-6)

mutate_filter_tests:
  iir:
  - apply_func:
      select: null
      func:
        _partial_: True
        _target_: deepbci.data_utils.mutators.filter
        l_freq: !Tunable
          values: [.1, 1, 2, 3, 4, 5]
          name: l_freq
        h_freq: null
        method: iir
        verbose: False
        iir_params:
          order: 4
          ftype: butter
          output: sos

  - apply_func:
      select: null
      func:
        _partial_: True
        _target_: deepbci.data_utils.mutators.epoch
        tmin: -0.2
        tmax: 0.995
        preload: true
        picks: [eeg]
        verbose: WARNING
        baseline: null

  - compress:
      compress_level: subject

  - apply_func:
      select: [[dbci], [BGSObs, BGSInt]]
      func:
        _partial_: True
        _target_: deepbci.data_utils.mutators.reject_epochs
        reject: 
          eeg: 50 # eeg: eval(100*1e-6)
  - apply_func:
      select: [[dbci], [OAObs, OAOut]]
      func:
        _partial_: True
        _target_: deepbci.data_utils.mutators.reject_epochs
        reject: 
          eeg: 50 # eeg: eval(100*1e-6)

  fir:
  - apply_func:
      select: null
      func:
        _partial_: True
        _target_: deepbci.data_utils.mutators.filter
        l_freq: !Tunable
          values: [.1, 1, 2, 3, 4, 5]
          name: l_freq
        h_freq: null
        method: 'fir'
          
  - apply_func:
      select: null
      func:
        _partial_: True
        _target_: deepbci.data_utils.mutators.epoch
        tmin: -0.2
        tmax: 0.995
        preload: true
        picks: [eeg]
        verbose: WARNING
        baseline: null

  - compress:
      compress_level: subject

  - apply_func:
      select: [[dbci], [BGSObs, BGSInt]]
      func:
        _partial_: True
        _target_: deepbci.data_utils.mutators.reject_epochs
        reject: 
          eeg: 50 # eeg: eval(100*1e-6)
  - apply_func:
      select: [[dbci], [OAObs, OAOut]]
      func:
        _partial_: True
        _target_: deepbci.data_utils.mutators.reject_epochs
        reject: 
          eeg: 50 # eeg: eval(100*1e-6)